FROM public.ecr.aws/lambda/java:21 AS build

RUN dnf -y update && \
    dnf install -y unzip tar gzip binutils patchelf && \
    dnf clean all && \
    rm -rf /var/cache/dnf /var/tmp/* /tmp/*

ARG CHROME_VERSION=130.0.6723.116

RUN cd /tmp && \
    curl -sSL https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chromedriver-linux64.zip -o chromedriver-linux64.zip && \
    unzip chromedriver-linux64.zip && \
    curl -sSL https://storage.googleapis.com/chrome-for-testing-public/${CHROME_VERSION}/linux64/chrome-headless-shell-linux64.zip -o chrome-headless-shell-linux64.zip && \
    unzip chrome-headless-shell-linux64.zip && \
    rm -rf *.zip

RUN dnf -y update && \
    dnf install -y libxcb libXcomposite libXdamage libXrandr libgbm alsa-lib nss atk at-spi2-atk fontconfig && \
    dnf clean all && \
    rm -rf /var/cache/dnf /var/tmp/*

ENV CHROME_DRIVER_PATH=/tmp/chromedriver-linux64/chromedriver
ENV CHROME_HEADLESS_PATH=/tmp/chrome-headless-shell-linux64/chrome-headless-shell
RUN chmod +x ${CHROME_DRIVER_PATH} ${CHROME_HEADLESS_PATH}

COPY copy-deps.sh /tmp/chrome-headless-shell-linux64
RUN cd /tmp/chrome-headless-shell-linux64 && \
    chmod +x copy-deps.sh && bash copy-deps.sh chrome-headless-shell

RUN cd /tmp && \
    tar cvfz java21-chrome-layer.tar.gz chrome-headless-shell-linux64/ chromedriver-linux64/

CMD [ "com.example.App::handleRequest" ]

# docker build . -f Dockerfile-chrome --platform linux/amd64 -t lambda-chrome-layer
# docker run -d --rm --name lambda-chrome-layer --platform linux/amd64 lambda-chrome-layer
# docker cp lambda-chrome-layer:/tmp/java21-chrome-layer.tar.gz .
# docker rm lambda-chrome-layer -f
# LD_DEBUG=libs ./chrome-headless-shell